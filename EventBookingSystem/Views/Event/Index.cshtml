<!-- Views/Event/Index.cshtml -->
@model IEnumerable<EventBookingSystem.Models.Event>
<div class="container mt-4">
    <div class="row mb-3">
        <div class="col">
            <h2 class="text-primary">Events</h2>
        </div>
        <div class="col text-end">
            <a asp-action="Create" asp-controller="Event" class="btn btn-success">Create New Event</a>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-md-4">
            <form asp-action="Index" method="get" class="input-group">
                <input type="hidden" name="page" value="1" />
                <input type="hidden" name="pageSize" value="5" />
                @Html.DropDownList("eventType", new SelectList(
                    new[]
                    {
                        new { Value = "", Text = "All Types" },
                        new { Value = "0", Text = "Concert" },
                        new { Value = "1", Text = "Conference" },
                        new { Value = "2", Text = "Workshop" }
                    },
                    "Value",
                    "Text",
                    ViewBag.EventType
                ), new { @class = "form-select", id = "eventTypeFilter", onchange = "this.form.submit()" })
            </form>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Name</th>
                    <th>Date</th>
                    <th>Venue</th>
                    <th>Type</th>
                    <th>Available Seats</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="eventList">
                @foreach (var evt in Model)
                {
                    @Html.Partial("_EventRow", evt)
                }
            </tbody>
        </table>
    </div>

    <div class="d-flex justify-content-between mt-3">
        <a asp-action="Index" asp-route-eventType="@ViewBag.EventType" asp-route-page="@(ViewBag.Page - 1)" asp-route-pageSize="@ViewBag.PageSize" class="btn btn-outline-primary @(ViewBag.Page == 1 ? "disabled" : "")">Previous</a>
        <span id="pageInfo">Page @ViewBag.Page of @ViewBag.TotalPages</span>
        <a asp-action="Index" asp-route-eventType="@ViewBag.EventType" asp-route-page="@(ViewBag.Page + 1)" asp-route-pageSize="@ViewBag.PageSize" class="btn btn-outline-primary @(ViewBag.Page == ViewBag.TotalPages ? "disabled" : "")">Next</a>
    </div>
</div>

<input type="hidden" id="RequestVerificationToken" name="__RequestVerificationToken" value="@Html.AntiForgeryToken()" />

@section Scripts {
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    $(document).on('click', '.book-btn', function () {
        const row = $(this).closest('tr');
        const eventId = row.data('event-id');
        const numberOfTickets = parseInt(row.find('.ticket-input').val()) || 1;
        bookTickets(eventId, numberOfTickets, row);
    });

    async function bookTickets(eventId, numberOfTickets, row) {
        const token = $('#RequestVerificationToken').val();
        try {
            const response = await fetch('@Url.Action("BookTickets", "Event")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': token
                },
                body: JSON.stringify({ eventId: eventId, numberOfTickets: numberOfTickets })
            });
            const data = await response.json();
            if (data.success) {
                row.find('.available-seats').fadeOut(300, function () {
                    $(this).text(data.availableSeats).fadeIn(300);
                });
                row.find('.ticket-input')
                    .attr('max', data.availableSeats)
                    .val(1)
                    .prop('disabled', data.availableSeats === 0);
                row.find('.book-btn').prop('disabled', data.availableSeats === 0);
                alert('Booking successful!');
            } else {
                alert('Booking failed: ' + data.message);
            }
        } catch (error) {
            console.log('Error booking tickets: ' + error);
            alert('Error booking tickets.');
        }
    }
</script>
}